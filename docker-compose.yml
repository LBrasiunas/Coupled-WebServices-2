version: '3.4'
services:
  library-db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "securePassw0rd"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$$SA_PASSWORD" -Q "SELECT 1" || exit 1
      interval: 5s
      retries: 5
  postgres-db:
    image: postgres:latest
    restart: on-failure
    environment:
      POSTGRES_DB: carservice-db, coupledservices-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
  library-api:
    image: ${DOCKER_REGISTRY-}library-api
    build:
      context: ./LibraryWebService
      dockerfile: Dockerfile
    ports:
      - "5002:80"
    depends_on:
      library-db:
        condition: service_healthy
    networks:
      - default
  carservice-api:
    image: ${DOCKER_REGISTRY-}carservice-api
    build:
      context: ./CarServiceWebService
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerCompose
      - ASPNETCORE_HTTP_PORTS=80
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - default
  coupledservices-api:
    image: ${DOCKER_REGISTRY-}coupledservices-api
    build:
      context: ./CoupledWebService
      dockerfile: Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=DockerCompose
      - ASPNETCORE_HTTP_PORTS=80
    depends_on:
      postgres-db:
        condition: service_healthy
    networks:
      - default